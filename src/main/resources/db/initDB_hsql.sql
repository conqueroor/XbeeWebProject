DROP TABLE line_states IF EXISTS;
DROP TABLE device_parameters IF EXISTS;
DROP TABLE parameters IF EXISTS;
DROP TABLE lines IF EXISTS;
DROP TABLE devices IF EXISTS;
DROP SEQUENCE GLOBAL_SEQ IF EXISTS;

CREATE SEQUENCE GLOBAL_SEQ AS INTEGER START WITH 1000;

CREATE TABLE devices
(
  id          INTEGER GENERATED BY DEFAULT AS SEQUENCE GLOBAL_SEQ PRIMARY KEY,
  adr64bit    VARCHAR(16)             NOT NULL,
  adr16bit    VARCHAR(4)              NOT NULL,
  nodeId      VARCHAR(20),
  role        VARCHAR(34)
);
CREATE UNIQUE INDEX devices_unique_adr64bit_idx ON devices (adr64bit);
CREATE UNIQUE INDEX devices_unique_adr16bit_idx ON devices (adr16bit);

CREATE TABLE lines
(
  id            INTEGER GENERATED BY DEFAULT AS SEQUENCE GLOBAL_SEQ PRIMARY KEY,
  name          VARCHAR(15)               NOT NULL,
  atCommand     VARCHAR(2)                NOT NULL,
  index         SMALLINT                  NOT NULL
);
CREATE UNIQUE INDEX lines_unique_name_idx ON lines (name);
CREATE UNIQUE INDEX lines_unique_at_idx ON lines (atCommand);

CREATE TABLE parameters
(
  id            INTEGER GENERATED BY DEFAULT AS SEQUENCE GLOBAL_SEQ PRIMARY KEY,
  name          VARCHAR(5)              NOT NULL
);
CREATE UNIQUE INDEX parameters_unique_name_idx ON parameters (name);

CREATE TABLE line_states
(
  id            INTEGER GENERATED BY DEFAULT AS SEQUENCE GLOBAL_SEQ PRIMARY KEY,
  lines_id      INTEGER                 NOT NULL,
  devices_id    INTEGER                 NOT NULL,
  value         VARCHAR(50)             NOT NULL,
  timestamp     TIMESTAMP DEFAULT now() NOT NULL,
  FOREIGN KEY (lines_id) REFERENCES lines (id) ON DELETE CASCADE,
  FOREIGN KEY (devices_id) REFERENCES devices (id) ON DELETE CASCADE
);

CREATE TABLE device_parameters
(
  id            INTEGER GENERATED BY DEFAULT AS SEQUENCE GLOBAL_SEQ PRIMARY KEY,
  devices_id    INTEGER                 NOT NULL,
  parameters_id INTEGER                 NOT NULL,
  value         VARCHAR(30),
  FOREIGN KEY (devices_id) REFERENCES devices (id) ON DELETE CASCADE,
  FOREIGN KEY (parameters_id) REFERENCES parameters (id) ON DELETE CASCADE
);

